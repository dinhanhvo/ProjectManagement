version: '3.8'

services:
  mysql8-eip-container:
    container_name: mysql8-eip-container
    image: mysql:8.2.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Eip@2025
      MYSQL_DATABASE: eip
    ports:
      - "3308:3306"
    #volumes:
    #- ./sql/eip.sql:/docker-entrypoint-initdb.d/init-script.sql
    networks:
      - eip-network
  eip-phpmyadmin8-container:
    #intel host
    image: phpmyadmin/phpmyadmin
    #image: arm64v8/phpmyadmin #choose this if you are running on Mac Apple Silicon(M1, M2,...)
    container_name: eip-phpmyadmin8-container
    restart: always
    depends_on:
      - mysql8-eip-container
    ports:
      - "9100:80" #port mapping
    environment:
      PMA_HOST: mysql8-eip-container #phpMyAdmin Host, PMA = PHP My Amin
      PMA_PORT: 3306
      UPLOAD_LIMIT: 500M
    networks:
      - eip-network
  eip-redis:
    image: docker.io/redis:7.2.3
    container_name: eip-redis
    restart: always
    ports:
      - "7379:6379" # Port mapping for Redis, you can change the host port as needed
    volumes:
      - ./eip-redis-data:/data # Mount a volume for Redis data persistence
    networks:
      - eip-network
  eip-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    container_name: eip-elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "8200:9200"
    volumes:
      - es_data:/usr/share/eip-elasticsearch/data
    networks:
      - eip-network
  eip-logstash:
    image: docker.elastic.co/logstash/logstash:7.17.13
    container_name: eip-logstash
    ports:
      - "6044:5044"
    volumes:
      - ./eip-logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - eip-elasticsearch
    networks:
      - eip-network
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.13
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://eip-elasticsearch:9200
#      - ELASTICSEARCH_API_KEY=U8Lq3WBqQ5-42cXWhDea0g
    ports:
      - "6601:5601"
    depends_on:
      - eip-elasticsearch
    networks:
      - eip-network
  eip-spring-container:
    image: eip-service-image
    container_name: eip-spring-container
#    working_dir: /app
#    command: mvn package
    volumes:
#      - ./src:/app # Ánh xạ mã nguồn của bạn
      - maven-cache:/root/.m2
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9088:8088"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql8-eip-container:3306/eip?serverTimezone=UTC&allowPublicKeyRetrieval=true
      MYSQL_ROOT_PASSWORD: Eip@2025
      REDIS_HOST: eip-redis
      REDIS_PORT: 6379
      LOGSTASH_HOST: eip-logstash
      LOGSTASH_PORT: 5044
      #Kafka broker
    #      KAFKA_BROKER_SERVER: kafka-broker-01
    #      KAFKA_BROKER_PORT: 19092
    networks:
      - eip-network
    #depends_on only waits for the container to start, not for the service inside the container to be fully operational
    depends_on:
      - mysql8-eip-container
      - eip-redis
#      - eip-logstash
volumes:
  maven-cache:
    driver: local
  es_data:
    driver: local
#  maven-cache:
networks:
  eip-network:
    name: eip-network
    driver: bridge

# docker-compose -f docker-compose.yml up  -d eip-redis
# docker-compose -f docker-compose.yml up  -d mysql8-eip-container
# docker-compose -f docker-compose.yml up --build -d eip-spring-container
# docker logs eip-spring-container -f
#  docker run -d -p 7379:6379 eip-redis
# docker exec -it mysql8-eip-container /bin/sh

#curl -u elastic:123 -X POST "http://localhost:9200/_security/service/your-service-account-name/token" -H 'Content-Type: application/json' -d'
#  {
#    "expiration": "1d"
#  }'
